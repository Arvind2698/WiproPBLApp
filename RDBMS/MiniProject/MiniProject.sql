CREATE TABLE TBL_STOCK(
PRODUCT_ID VARCHAR2(6) CONSTRAINT TBL_STOCK_PK PRIMARY KEY,
PRODUCT_NAME VARCHAR2(20) UNIQUE,
QUANTITY_ON_HAND NUMBER CONSTRAINT TEST_CHECK_QTY CHECK( QUANTITY_ON_HAND >=0 ),
PRODUCT_UNIT_PRICE NUMBER CONSTRAINT TEST_CHECK_PRICE CHECK ( PRODUCT_UNIT_PRICE >= 0 ),
REORDER_LEVEL NUMBER CONSTRAINT TEST_CHECK_REORDER CHECK ( REORDER_LEVEL >= 0 )
)

CREATE TABLE TBL_SALES(
SALES_ID VARCHAR2(6) CONSTRAINT TBL_SALES_PK PRIMARY KEY,
SALES_DATE DATE,
PRODUCT_ID VARCHAR(6) CONSTRAINT TBL_SALES_FK REFERENCES TBL_STOCK(PRODUCT_ID) ON DELETE CASCADE,
QUANTITY_SOLD NUMBER CONSTRAINT TEST_CHECK_SALES_QTY CHECK( QUANTITY_SOLD >=0 ),
SALES_PRICE_PER_UNIT NUMBER CONSTRAINT TEST_CHECK_SALES_PRICE CHECK( SALES_PRICE_PER_UNIT >=0 )
)

INSERT INTO TBL_STOCK VALUES ('RE1001','REDMI NOTE 3',20,12000,5);
INSERT INTO TBL_STOCK VALUES ('IP1002','IPHONE 5S',10,21000,2);
INSERT INTO TBL_STOCK VALUES ('PA1003','PANASONIC P55',50,5500,5);

CREATE SEQUENCE SEQ_SALES_ID
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE SEQ_PRODUCT_ID
START WITH 1004
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE VIEW V_SALES_REPORT AS
SELECT SALES_ID , SALES_DATE , TBL_STOCK.PRODUCT_ID ,PRODUCT_NAME ,QUANTITY_SOLD ,PRODUCT_UNIT_PRICE ,SALES_PRICE_PER_UNIT, SALES_PRICE_PER_UNIT - PRODUCT_UNIT_PRICE AS "PROFIT_AMOUNT" 
FROM TBL_STOCK
INNER JOIN TBL_SALES
ON TBL_STOCK.PRODUCT_ID=TBL_SALES.PRODUCT_ID;


